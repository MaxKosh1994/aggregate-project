// Подключаем модуль node-cron — библиотеку для планирования задач в Node.js с использованием расписаний в формате cron.
const cron = require('node-cron');

// Инициализируем буфер для логов в виде массива, где будут временно храниться логи.
let logBuffer = [];

// Хранилище для всех созданных cron-задач. Это массив, где будут храниться активные задачи.
let tasks = [];

/**
 * Проверяет, пуст ли буфер логов.
 * @returns {boolean} true, если буфер пуст; false, если в буфере есть хотя бы один лог.
 */
const isLogBufferEmpty = () => logBuffer.length === 0;

/**
 * Очищает (сбрасывает) буфер логов, удаляя все текущие логи.
 * Это полезно, например, после того, как логи были записаны в файл.
 */
const resetLogBuffer = () => {
  logBuffer = []; // Обнуляем массив, удаляя все элементы.
};

/**
 * Добавляет новый лог (запись) в буфер.
 * @param {string} log - Лог, который нужно временно сохранить в буфере.
 */
const addLogToBuffer = (log) => {
  logBuffer.push(log); // Добавляем лог в конец массива буфера.
};

/**
 * Возвращает текущее содержимое лог-буфера.
 * @returns {Array<string>} Список логов, сохранённых в буфере.
 */
const getLogBuffer = () => logBuffer;

/**
 * Запускает cron-задачу с указанным расписанием и функцией.
 * @param {string} schedule - Расписание в формате cron (например, '0 * * * *' для выполнения каждый час).
 * @param {Function} taskFunction - Функция, которая будет выполняться по заданному расписанию.
 * @returns {Object} task - Объект задачи cron, чтобы можно было её остановить или управлять ею.
 */
const startTask = (schedule, taskFunction) => {
  const task = cron.schedule(schedule, taskFunction); // Создаём и запускаем задачу cron.
  tasks.push(task); // Сохраняем запущенную задачу в массиве для отслеживания.
  return task; // Возвращаем задачу, чтобы ей можно было управлять (например, остановить).
};

/**
 * Останавливает все активные cron-задачи.
 * Это полезно, например, при завершении работы приложения, чтобы задачи не продолжали выполняться.
 */
const stopAllTasks = () => {
  tasks.forEach((task) => task.stop()); // Останавливаем каждую задачу в массиве.
  tasks = []; // Очищаем массив, так как все задачи остановлены.
};

// Экспортируем функции для работы с лог-буфером и cron-задачами, чтобы их можно было использовать в других модулях.
module.exports = {
  isLogBufferEmpty, // Проверка состояния буфера логов.
  resetLogBuffer, // Сброс (очистка) буфера логов.
  addLogToBuffer, // Добавление нового лога в буфер.
  getLogBuffer, // Получение содержимого буфера логов.
  startTask, // Запуск новой cron-задачи.
  stopAllTasks, // Остановка всех активных cron-задач.
};
